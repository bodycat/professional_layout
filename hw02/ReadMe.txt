The first steps:
1) Create email account at https://temp-mail.org/
2) Create an account at https://avocode.com/
 2.1) Avocode in 10 minutes: https://www.youtube.com/watch?v=pAfMkjKY004 
 2.2) Russian free equivalent: https://www.markupeasy.ru 
                   + tutorial: https://www.youtube.com/watch?v=CQUjRKP2op8
                   + VK group: https://vk.com/markupeasy
3) Download Sublime Text 3
 3.1) Useful plugins for  ST3: https://proglib.io/p/15-sublime-text-plugins/
4) Download SRware [look like safari | webkit engine] https://www.srware.net/en/software_srware_iron_download.php
Get down to work

Teacher:
Igor Kubikov

Useful links:
https://fontawesome.com
       <i class="fas fa-shopping-cart"></i>
       <i class="fas fa-caret-down"></i>
       <i class="fas fa-search"></i>
       http://fontawesome.ru/examples/
http://www.html-color-names.com/color-chart.php
https://caniuse.com/
https://validator.w3.org/#validate_by_input
https://www.liveinternet.ru/stat/ru/browsers.html?date=2018-04-01;period=month
https://chrome.google.com/webstore/detail/perfectpixel-by-welldonec/dkaagdgjmgdmbnecmcefdhjekcoceebi
https://flexboxfroggy.com/#ru
https://code.visualstudio.com/
https://yadi.sk/i/yZkNB89f3ZXpqY

<!-- Regular Expression Language <lang="ru"> -->
https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference
http://www.pcre.ru/docs/perl/text/intro
    i - не различать строчные и заглавные буквы;
    m - считать строку многострочной;
    s - однострочная строка;
    x - расширенный синтаксис ( использование пробелов и комментариев).

Обычно все эти опции обозначают как '/x'. Их можно использовать даже внутри шаблонов использую новую конструкцию (?...).

В шаблонах используются следующие метасимволы (символы обозначающие группы других символов):

    \ - считать следующий метасимвол как обычный символ;
    ^ - начало строки;
    . - один произвольный символ. Кроме '\n' - конец строки;
    $ - конец строки;
    | - альтернатива (или);
    () - группировка;
    [ ] - класс символов.

Метасимволы имеют модификаторы (пишутся после метасимвола):

    * - повторяется 0 или большее число раз;
    + - повторяется 1 или большее число раз;
    ? - 1 или 0 раз;
    {n} - точно n раз;
    {n,} - по меньшей мере раз;
    {n,m} - не менше n, но и не больше m.

Во все других случаях фигурные скобки считаются обычными (регулярными) символами. Таким образом '*' эквивалентна {0,} , '+' - {1,} и '?' - {0,1}. n и m не могут быть больше 65536.

По умолчанию действие метасимволов «жадно» (greedy). Совпадение распространяется столько раз сколько возможно не учитывая результат действия следуюющих метасимволов. Если вы хотите "уменьшить их аппетит" то используйте символ '?'. Это не изменяет значение метасимволов просто уменьшает распространение. Таким образом:

    *? - станет 0 и более;
    +? - 1 и более;
    ?? - 0 или 1 раз;
    {n}? - точно n раз;
    {n,}? - не меньше n раз;
    {n,m}? - больше или равно n и меньше m раз.

Шаблоны работают так же, как и двойные кавычки поэтому в них можно использовать `\` - символы (бакслэш-символы):

    \t - символ табуляции;
    \n - новая строка;
    \r - перевод каретки;
    \а - перевол формата;
    \v - вертикальная табуляция;
    \a - звонок;
    \e - escape;
    \033 - восьмеричная запись символа;
    \x1A - шестнадцатеричная;
    \c[ - control символ;
    \l - нижний регистр следующего символа;
    \u - верхний регистр следующего символа;
    \L - все символы в нижнем регистре до \E;
    \U - в верхнем регистре до \E;
    \E - ограничитель смены регистра;
    \Q - отмена действия как метасимвола.

Дополнительно в Perl добавлены следующие метасимволы:

    \w - алфавитно-цифровой или '_' символ;
    \W - не алфавитно-цифровой или '_' символ;
    \s - один пробел;
    \S - один не пробел;
    \d - одна цифра;
    \D - одна не цифра.

Обратите внимание что все это «один» символ. Для обозначения последовательности применяйте модификаторы, например:

    \w+ - слово;
    \d+ - целое число;
    [+-]?\d+ - целое со знаком;
    [+-]?\d+\.?\d* - число с точкой.

Кроме того существуют мнимые метасимволы. Обозначающие не существующие символы в месте смены значения. Такие как:

    \b - граница слова;
    \B - не граница слова;
    \A - начало строки;
    \Z - конец строки;
    \G - конец действия m//g.

Граница слова (\b) - это мнимая точка между символами \w и \W. Внутри класса символов '\b' обозначает символ backspace (стирания). Метасимволы \A и \Z - аналогичны '^' и '$' но если началостроки '^' и конец строки '$' действуют для каждой строки в многосторочной строке, то \A и \Z обозначают начало и конец всей многосторчной строки.

Если внутри шаблона применяется группировка (круглые скобки) то номер подстроки группы обозначается как '\цифра'.

Заметьте что за шаблоном в пределах выражения или блока эти группы обозначаются как '$цифра'. Кроме этого существуют дополнительные переменные:

    $+ - обозначает последнее совпадение;
    $& - все совпадение;
    $` - все до совпадения;
    $' - все после совпадения.

Пример:

$s = "Один 1 два 2 и три 3";
if ($s =~ /(\d+)\D+(\d+)/)
{
print "$1\n"; # Результат '1'
print "$2\n"; # '2'
print "$+\n"; # '2'
print "$&\n"; # '1 два 2'
print "$`\n"; # 'Один '
print "$'\n"; # ' и три 3'
}

Perl версии 5 содержит дополнительные конструкции шаблонов:

    (?#комментарий) - комментарий в теле шаблона.
    (?:шаблон) - группировка как и '( )' но без обратной ссылки.
    (?=шаблон) - "заглядывание" вперед.

Например /\w+(?=\t)/ соответствует слову, за которым идет табуляция, но символ '\t' не включается в результат.

Пример:

$s = "1+2-3*4";
if ($s =~ /(\d)(?=-)/) # Наити цифру за которой стоит '-'
{
print "$1\n"; # Результат '2'
} else {
print "ошибка поиска\n";
}

(?!шаблон) - "заглядывание" вперед по отрицанию.

Пример:

$s = "1+2-3*4";
if ($s =~ /(\d)(?!\+)/) # Наити цифру за которой не стоит '+'
{
print "$1\n"; # Результат '2'
} else {
print "ошибка поиска\n";
}

(?ismx) - "внутренние" модификаторы. Удобно применять в шаблонах, где например нужно внутри шаблона указать модификатор.

Правила регулярных выражений

    Любой символ обозначает себя самого если это не метасимвол. Если вам нужно отменить действие метасимвола то поставьте перед ним '\'.
    Строка символов обозначает строку этих символов.
    Множество возможных символов (класс) заключается в квадратные скобки '[]' это значит что в данном месте может стоять один из указанных в скобках символ. Если первый символ в скобках это '^' - значит не один из указанных символов не может стоять в данном месте выражения. Внутри класса можно употреблять символ '-' обозначающий диаппазон символов. Например a-z один из малых букв латинского алфавита, 0-9 - цифра и т.д.
    Все символы, включая специальные можно обозначать с помощью '\' как в языке С.
    Альтернативные последовательности разделяются символом '|' Заметьте, что внутри квадратных скобок это обычный символ.
    Внутри регулярного выражения можно указыват "подшаблоны", заключая их в крунлые скобки и ссылаться на них как '\номер' Первая скобка обозначается как '\1'.
